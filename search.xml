<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python学习</title>
      <link href="/2023/07/02/python%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/07/02/python%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-学习指南"><a href="#Python-学习指南" class="headerlink" title="Python 学习指南"></a>Python 学习指南</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>欢迎来到Python学习指南！Python是一种简单而强大的编程语言，被广泛应用于各种领域，包括软件开发、数据分析、人工智能和Web开发等。本指南旨在帮助您从零开始学习Python，并逐步掌握其核心概念和编程技巧。</p><h3 id="为什么选择Python？"><a href="#为什么选择Python？" class="headerlink" title="为什么选择Python？"></a>为什么选择Python？</h3><p>Python因其简洁的语法和丰富的库生态系统而备受推崇。以下是一些选择Python的理由：</p><ul><li><strong>易学易用</strong>：Python具有直观的语法和清晰的代码结构，使得初学者能够迅速入门。</li><li><strong>广泛应用</strong>：Python可用于各种任务，从简单的脚本编写到复杂的大型项目开发，无论是数据分析、科学计算还是Web应用，Python都能胜任。</li><li><strong>强大的库和工具</strong>：Python拥有众多强大的库和工具，如NumPy、Pandas、Matplotlib和Django等，为开发人员提供了丰富的资源和解决方案。</li><li><strong>活跃的社区</strong>：Python拥有庞大而活跃的开发者社区，您可以在社区中寻求帮助、分享经验并与其他开发者交流。</li></ul><h3 id="学习准备"><a href="#学习准备" class="headerlink" title="学习准备"></a>学习准备</h3><p>在开始学习Python之前，确保您具备以下准备：</p><ol><li><strong>计算机和操作系统</strong>：您需要一台计算机，并安装一个支持Python的操作系统，如Windows、macOS或Linux。</li><li><strong>Python解释器</strong>：下载并安装最新版本的Python解释器。下载适合你的操作系统版本 官方网站（<a href="https://www.python.org)/">https://www.python.org）</a></li><li><strong>文本编辑器</strong>：选择一个适合您的文本编辑器，用于编写Python代码。一些常用的选择包括VS Code、Sublime Text和Atom等。</li><li><strong>学习资源</strong>：除本指南外，还可以参考在线教程、书籍和视频教程等Python学习资源。这些资源将帮助您更全面地学习Python的各个方面。</li></ol><h3 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h3><p>学习Python的最佳方法是通过实践。在每个主题中，我们将提供理论知识和示例代码，并鼓励您在学习过程中动手实践。通过编写代码，您将更好地理解Python的概念，并培养解决问题的能力。</p><p>请注意，本指南旨在作为Python学习的起点，而不是覆盖所有细节。Python是一个广阔的主题，还有很多深入的内容可以进一步探索。我们鼓励您在学习过程中保持好奇心，并继续探索Python世界的更多可能性。</p><p>接下来，我们将深入探讨Python的基础知识。</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h3><ul><li>变量<ul><li>变量的定义和命名规则</li><li>变量的赋值和重新赋值</li><li>变量的作用域</li></ul></li></ul><p>变量可以通过赋值操作符（&#x3D;）赋值，并且可以随时通过重新赋值来更改变量的值。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;Seiko&quot;</span>  <span class="comment"># 将字符串 &quot;John&quot; 赋值给变量 name</span></span><br><span class="line">age = <span class="number">25</span>  <span class="comment"># 将整数 25 赋值给变量 age</span></span><br><span class="line"></span><br><span class="line">age = <span class="number">30</span>  <span class="comment"># 将整数 30 重新赋值给变量 age</span></span><br></pre></td></tr></table></figure><p>变量的作用域是指变量在程序中可访问的区域。在Python中，变量的作用域可以是全局作用域或局部作用域。</p><ul><li>全局作用域：在函数外部定义的变量具有全局作用域，可以在整个程序中访问。</li><li>局部作用域：在函数内部定义的变量具有局部作用域，只能在函数内部访问。<br>示例<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">global_variable = 10  # 全局作用域</span><br><span class="line"></span><br><span class="line">def my_function():</span><br><span class="line">    local_variable = 20  # 局部作用域</span><br><span class="line">    print(local_variable)</span><br><span class="line"></span><br><span class="line">print(global_variable)  # 输出 10</span><br><span class="line">my_function()  # 输出 20</span><br><span class="line"></span><br></pre></td></tr></table></figure>在函数中，可以使用关键字 global 声明一个全局变量，使其在函数内部也可访问。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">global_variable = 10  # 全局作用域</span><br><span class="line"></span><br><span class="line">def my_function():</span><br><span class="line">    global global_variable  # 声明为全局变量</span><br><span class="line">    local_variable = 20  # 局部作用域</span><br><span class="line">    print(local_variable)</span><br><span class="line">    print(global_variable)</span><br><span class="line"></span><br><span class="line">my_function()  # 输出 20 和 10</span><br></pre></td></tr></table></figure></li><li>数据类型<ul><li>数字类型（整数、浮点数、复数）</li><li>字符串类型</li><li>布尔类型</li><li>列表、元组和字典的基本概念和用法</li></ul></li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>Python 提供了多种内置的数据类型，每种数据类型都有其特定的用途和特性。</p><table><thead><tr><th>数据类型</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>整数（Integer）</td><td>表示整数值，没有小数部分。例如：1、10、-5。</td><td><code>x = 10</code></td></tr><tr><td>浮点数（Float）</td><td>表示带有小数部分的数值。例如：1.5、3.14、-0.5。</td><td><code>x = 3.14</code></td></tr><tr><td>复数（Complex）</td><td>由实数部分和虚数部分组成的数值。例如：3+2j、-1+4j。</td><td><code>x = 3+2j</code></td></tr><tr><td>字符串（String）</td><td>表示文本数据，由字符组成的序列。字符串要用引号（单引号或双引号）括起来。例如：”Hello”、’World’。</td><td><code>x = &quot;Hello&quot;</code></td></tr><tr><td>布尔值（Boolean）</td><td>表示逻辑值，只有两个取值：True（真）和 False（假）。</td><td><code>x = True</code></td></tr><tr><td>列表（List）</td><td>有序、可变的数据集合，可以包含不同类型的元素。列表用方括号括起来，元素之间用逗号分隔。例如：[1, 2, 3]。</td><td><code>x = [1, 2, 3]</code></td></tr><tr><td>元组（Tuple）</td><td>有序、不可变的数据集合，可以包含不同类型的元素。元组用圆括号括起来，元素之间用逗号分隔。例如：(1, 2, 3)。</td><td><code>x = (1, 2, 3)</code></td></tr><tr><td>字典（Dictionary）</td><td>无序、可变的键值对集合，可以包含不同类型的键和值。字典用花括号括起来，键值对之间用冒号分隔，键值对之间用逗号分隔。例如：{“name”: “John”, “age”: 25}。</td><td><code>x = &#123;&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 25&#125;</code></td></tr></tbody></table><p>以上是 Python 中常用的数据类型及其基本概念和用法。在编写程序时，了解和正确使用不同的数据类型将对您的代码逻辑和功能起到重要作用。</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li>算术运算符<ul><li>加法、减法、乘法、除法等基本运算符</li><li>取模运算、幂运算、整除运算等</li></ul></li><li>比较运算符<ul><li>相等性比较、大小比较、包含性比较等</li></ul></li><li>逻辑运算符<ul><li>与运算、或运算、非运算等</li></ul></li><li>赋值运算符<ul><li>基本赋值运算符、复合赋值运算符等</li></ul></li></ul><h3 id="控制流程"><a href="#控制流程" class="headerlink" title="控制流程"></a>控制流程</h3><ul><li>条件语句（if-else）<ul><li>if语句的基本语法和用法</li><li>嵌套if语句</li><li>多重条件判断（elif语句）</li><li>逻辑运算符在条件语句中的应用</li></ul></li><li>循环语句（for循环、while循环）<ul><li>for循环的基本语法和用法</li><li>遍历列表、元组和字典</li><li>range()函数的使用</li><li>while循环的基本语法和用法</li><li>循环控制语句（break和continue）</li></ul></li><li>异常处理<ul><li>异常的概念和处理机制</li><li>try-except语句的使用</li><li>异常类型和捕获特定类型的异常</li></ul></li></ul><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ul><li>函数的定义和调用<ul><li>函数的基本语法和结构</li><li>函数参数的传递方式（位置参数、关键字参数）</li><li>函数的返回值</li></ul></li><li>内置函数和自定义函数<ul><li>常用的内置函数和它们的用法</li><li>自定义函数的编写和使用</li><li>函数的作用域和全局变量</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown使用</title>
      <link href="/2023/07/02/Markdown%E7%94%A8%E6%B3%95/"/>
      <url>/2023/07/02/Markdown%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档.</p><p>Markdown 语言在2004 由约翰·格鲁伯（英语：John Gruber）创建。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><p>Markdown 编写的文档后缀为 .md , .markdown</p><p><a href="https://kjimg10.360buyimg.com/ott/jfs/t20250701/217548/22/34077/183099/64a0dbecF69bc1def/86691c2de3c7fdc1.png"><img src="https://kjimg10.360buyimg.com/ott/jfs/t20250701/217548/22/34077/183099/64a0dbecF69bc1def/86691c2de3c7fdc1.png" alt="1688263651579.png"></a></p><p>Markdown文档具有广泛的用途，以下是一些常见的应用场景：</p><p>编写文档和笔记：Markdown提供了一种简单、轻量级的文本格式，使得编写和组织文档和笔记变得简单而高效。它不会分散注意力于样式和排版，而是专注于内容本身。</p><p>创建博客和网页：许多博客平台和网站支持Markdown语法，因此您可以使用Markdown来编写和发布博客文章或网页内容。Markdown的简洁性和易读性使其成为发布在线内容的理想选择。</p><p>撰写电子邮件和消息：在电子邮件、聊天应用或论坛中，您可以使用Markdown来格式化和排版您的消息。它可以帮助您创建更易读和清晰的内容，包括列表、链接、引用等。</p><p>编写技术文档和文档注释：对于开发人员和技术作者来说，Markdown是一种流行的格式选择。它可以用于编写代码文档、API文档、README文件以及各种注释，使得文档的编写和维护更加方便。</p><p>制作演示文稿：使用支持Markdown的演示文稿工具，如Remark、Reveal.js等，您可以创建漂亮的幻灯片演示。Markdown的结构化方式使得创建幻灯片变得简单，并且可以轻松添加代码块、图像和链接等。</p><p>生成静态网站：通过将Markdown文件与静态网站生成器（如Jekyll、Hugo、Gatsby等）结合使用，您可以将Markdown文档转换为美观、可导航的静态网站。这对于个人博客、文档站点或项目文档非常有用。</p><p>总的来说，Markdown是一种简单、易读且易于学习的标记语言，广泛应用于编写各种类型的文档和内容。它使得内容创作更加专注于思想表达和内容组织，而不必过多关注样式和排版。无论您是在编写个人笔记、发布博客文章还是撰写技术文档，Markdown都是一种强大而方便的工具。</p><h2 id="1-Markdown教程"><a href="#1-Markdown教程" class="headerlink" title="1. Markdown教程"></a>1. Markdown教程</h2><p>Markdown是一种简单、易读且易于学习的标记语言，广泛应用于编写各种类型的文档和内容。它使得内容创作更加专注于思想表达和内容组织，而不必过多关注样式和排版。</p><h2 id="2-Markdown标题"><a href="#2-Markdown标题" class="headerlink" title="2. Markdown标题"></a>2. Markdown标题</h2><p>使用 <code>#</code> 符号来表示标题。Markdown支持六级标题，一个 <code>#</code> 表示一级标题，以此类推。标题可以帮助组织文档结构，使其更具可读性和清晰性。</p><h2 id="3-Markdown段落格式"><a href="#3-Markdown段落格式" class="headerlink" title="3. Markdown段落格式"></a>3. Markdown段落格式</h2><p>段落之间使用空行进行分隔。Markdown支持斜体、加粗、删除线等文本样式。</p><ul><li><em>斜体文本</em>：使用单个星号或下划线包围文本。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*</span><br></pre></td></tr></table></figure><ul><li><strong>加粗文本</strong>：使用双星号或双下划线包围文本。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**加粗文本**</span><br></pre></td></tr></table></figure><ul><li><del>删除线文本</del>：使用两个波浪线包围文本。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线文本~~</span><br></pre></td></tr></table></figure><h2 id="4-Markdown列表"><a href="#4-Markdown列表" class="headerlink" title="4. Markdown列表"></a>4. Markdown列表</h2><p>列表可以帮助组织和呈现信息。Markdown支持无序列表和有序列表。</p><ul><li>无序列表使用短横线（-）、加号（+）或星号（*）作为标记，每个项目前面加一个空格。</li><li>有序列表使用数字后面的点作为标记，每个项目前面加一个空格。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">## 无序列表</span><br><span class="line"></span><br><span class="line">- 项目1</span><br><span class="line">- 项目2</span><br><span class="line">- 项目3</span><br><span class="line"></span><br><span class="line">## 有序列表</span><br><span class="line"></span><br><span class="line">1. 项目1</span><br><span class="line">2. 项目2</span><br><span class="line">3. 项目3</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul><li>项目1</li><li>项目2</li><li>项目3</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><h2 id="5-Markdown区块"><a href="#5-Markdown区块" class="headerlink" title="5. Markdown区块"></a>5. Markdown区块</h2><p>引用区块可以用来引用他人的文本、插入注释或提供引用资料。使用大于号（&gt;）表示引用他人的文本。</p><blockquote><p>这是一个引用区块的示例。</p></blockquote><h2 id="6-Markdown代码"><a href="#6-Markdown代码" class="headerlink" title="6. Markdown代码"></a>6. Markdown代码</h2><p>插入代码可以帮助展示代码片段、命令或其他计算机代码。使用反引号（&#96;）包围单行代码，或使用三个反引号包围多行代码块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, World!&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="7-Markdown链接"><a href="#7-Markdown链接" class="headerlink" title="7. Markdown链接"></a>7. Markdown链接</h2><p>插入链接可以连接到其他网页、文档或资源。使用方括号表示链接文本，紧跟着使用圆括号表示链接地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[点击这里查看更多Markdown教程](https://www.example.com/markdown-tutorials)</span><br></pre></td></tr></table></figure><h2 id="8-Markdown图片"><a href="#8-Markdown图片" class="headerlink" title="8. Markdown图片"></a>8. Markdown图片</h2><p>插入图片可以使文档更具可视化效果。使用感叹号和方括号来插入图片，方括号内是图片的替代文本，紧跟着方括号使用圆括号表示图片的URL或文件路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![示例图片](https://www.example.com/images/example.jpg)</span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![示例图片](https://kjimg10.360buyimg.com/ott/jfs/t20250630/200479/16/38269/131035/649f5d61F00f75afd/02b2f3ef2546de6c.png)</span><br></pre></td></tr></table></figure><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20250630/200479/16/38269/131035/649f5d61F00f75afd/02b2f3ef2546de6c.png" alt="示例图片"></p><h2 id="9-Markdown表格"><a href="#9-Markdown表格" class="headerlink" title="9. Markdown表格"></a>9. Markdown表格</h2><p>表格可以用来以表格形式展示数据和信息。使用竖线（|）和连字符（-）定义表头和表格内容的列数来创建表格。</p><table><thead><tr><th>列1标题</th><th>列2标题</th><th>列3标题</th></tr></thead><tbody><tr><td>内容1</td><td>内容2</td><td>内容3</td></tr><tr><td>内容4</td><td>内容5</td><td>内容6</td></tr></tbody></table><h2 id="10-Markdown高级技巧"><a href="#10-Markdown高级技巧" class="headerlink" title="10. Markdown高级技巧"></a>10. Markdown高级技巧</h2><p>Markdown还支持一些高级技巧，如：</p><ul><li>使用脚注来添加注释内容。</li><li>使用两个波浪线（~~）包围文本以显示删除线。</li><li>使用LaTeX语法来插入数学公式。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库</title>
      <link href="/2023/06/29/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2023/06/29/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h1><h2 id="DDL数据库操作"><a href="#DDL数据库操作" class="headerlink" title="DDL数据库操作"></a>DDL数据库操作</h2><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><blockquote><p>查询所有数据库</p></blockquote><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;</span><br><span class="line"></span><br><span class="line">查询当前数据库</span><br><span class="line"></span><br><span class="line">``````mysql</span><br><span class="line">SELECT DATABASE();</span><br><span class="line"></span><br><span class="line">### 创建</span><br><span class="line"></span><br><span class="line">``````mysql</span><br><span class="line">CREATE DATABASE [IF NOT EXISTS] 数据库名 [DEFAULT CHARSET 字符集] [COLLATE 排序规则];</span><br></pre></td></tr></table></figure><p>IF NOT EXISTS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CRETE DATABASE IF NOT EXISTS 数据库名 DEFAULT CHARSET UTF8M4B;</span><br><span class="line"></span><br><span class="line">### 删除</span><br><span class="line"></span><br><span class="line">``````mysql</span><br><span class="line">DROP DATABASE [IF EXISTS] 数据库名;</span><br><span class="line"></span><br><span class="line">### 使用</span><br><span class="line"></span><br><span class="line">``````mysql</span><br><span class="line">USE 数据库名;</span><br><span class="line"></span><br><span class="line">## DDL-表操作</span><br><span class="line"></span><br><span class="line">###  查询</span><br><span class="line"></span><br><span class="line">查询当前数据库所有表</span><br><span class="line"></span><br><span class="line">``````mysql</span><br><span class="line">SHOW TABALES;</span><br></pre></td></tr></table></figure><p>查询表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC 表名;</span><br></pre></td></tr></table></figure><p>查询指定表的建表语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE TABLE 表名;</span><br><span class="line"></span><br><span class="line">### 创建</span><br><span class="line"></span><br><span class="line">```mysql</span><br><span class="line">CREATE TABLE 表名(</span><br><span class="line">字段1 字段1类型 [COMMENT 字段1注释]</span><br><span class="line">字段2 字段2类型 [COMMENT 字段2注释]</span><br><span class="line">字段3 字段3类型 [COMMENT 字段3注释]</span><br><span class="line">)[COMMENT 表注释];</span><br></pre></td></tr></table></figure></blockquote><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><blockquote><p><strong>数值类型</strong></p></blockquote><blockquote><table><thead><tr><th align="left">类型</th><th align="left">大小</th><th align="left">有符号(SIGNED)范围</th><th align="left">无符号(UNSUGNED)范围</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">TINYINT</td><td align="left">1byte</td><td align="left">(-128,127)</td><td align="left">(0,255)</td><td align="left">小整数值</td></tr><tr><td align="left">SMALLINT</td><td align="left">2bytes</td><td align="left">(-32768，32767)</td><td align="left">(0，65535)</td><td align="left">大整数值</td></tr><tr><td align="left">MEDIUMINT</td><td align="left">3bytes</td><td align="left">(-8388608,8388607)</td><td align="left">(0,16777215)</td><td align="left">大整数值</td></tr><tr><td align="left">INT&#x2F;INTEGER</td><td align="left">4bytes</td><td align="left">(-2147483648,214748364</td><td align="left">(0,429496729</td><td align="left">大整数值</td></tr><tr><td align="left">BIGINT</td><td align="left">8bytes</td><td align="left">(-2^63，2^63-1)</td><td align="left">(0，2^64-1</td><td align="left">极大整数值</td></tr><tr><td align="left">FLOAT</td><td align="left">4bytes</td><td align="left">(-3.402823466 E+38，3.402823466351 E+38</td><td align="left">0 和 (1.175494351 E-38，3.402823466 E+38</td><td align="left">单精度浮点数值</td></tr><tr><td align="left">DOUBLE</td><td align="left">8bytes</td><td align="left">(-1.7976931348623157E+308，1.7976931348623157E+308)</td><td align="left">0 和(2.2250738585072014E-308，1.7976931348623157E+308)</td><td align="left">双精度浮点数值</td></tr><tr><td align="left">DECIMAL</td><td align="left"></td><td align="left">依赖于M(精度)和D(标度)的值</td><td align="left">依赖于M(精度)和D(标度)的值</td><td align="left">小数值(精确定点数)</td></tr></tbody></table></blockquote><blockquote><p><strong>字符串类型</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>描述</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串(需要指定长度)</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串(需要指定长度)</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过255个字符的二进制数据</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16777215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-4294967295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4294967295 bytes</td><td>极大文本数据</td></tr></tbody></table></blockquote><blockquote><p><strong>日期时间类型</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01 至 9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>-838:59:59 至 838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901 至 2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00 至9999-12-31 23:59:59</td><td>YYYY-MM-DD<br> HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:01 至2038-01-19 03:14:07</td><td>YYYY-MM-DD<br>HH:MM:SS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
